server {
    listen       80;
    listen       [::]:80;
    server_name  registry.skydrop.com.mx;
    return 301 https://$server_name$request_uri;

    charset utf8;
}

server {
  listen       443 ssl http2;
  listen       [::]:443 ssl http2;
  server_name  registry.skydrop.com.mx;

  include conf.d/ssl.inc;

  proxy_set_header 	Host $http_host;
  proxy_set_header 	X-Real-IP $remote_addr;

  client_max_body_size 0; # disable any limits to avoid HTTP 413 for large images
  chunked_transfer_encoding on;

  location / {
    auth_basic "registry.skydrop.com.mx";
    auth_basic_user_file conf.d/registry.password;

    proxy_pass  	http://registry:5000;
  }

  location /_ping {
    auth_basic off;
    proxy_pass http://registry:5000;
  }

  location /v1/_ping {
    auth_basic off;
    proxy_pass http://registry:5000;
  }

  location /v2/ {
    if ($http_user_agent ~ "^(docker\/1\.(3|4|5(?!\.[0-9]-dev))|Go ).*\$" ) {
      return 404;
    }

    auth_basic "registry.skydrop.com.mx";
    auth_basic_user_file conf.d/registry.password;
    add_header 'Docker-Distribution-Api-Version' 'registry/2.0' always;

    proxy_pass  	http://registry:5000;
    proxy_set_header 	Host $http_host;
    proxy_set_header 	X-Real-IP $remote_addr;
    proxy_set_header 	X-Forwarded-For $proxy_add_x_forwarded_for;
    proxy_set_header 	X-Forwarded-Proto $scheme;
    proxy_read_timeout 	900;
  }
}
